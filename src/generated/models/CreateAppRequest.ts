/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Technologies } from './Technologies';
import {
    TechnologiesFromJSON,
    TechnologiesFromJSONTyped,
    TechnologiesToJSON,
} from './Technologies';

/**
 * 
 * @export
 * @interface CreateAppRequest
 */
export interface CreateAppRequest {
    /**
     * The valid URLs where users can be redirected after authentication.
     * @type {Array<string>}
     * @memberof CreateAppRequest
     */
    allowed_callback_urls?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateAppRequest
     */
    auth_origin?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateAppRequest
     */
    hosted?: boolean;
    /**
     * the subdomain of the app's hosted login page
     * @type {string}
     * @memberof CreateAppRequest
     */
    hosted_subdomain?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateAppRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateAppRequest
     */
    redirect_url?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateAppRequest
     */
    organization_id?: string;
    /**
     * 
     * @type {Array<Technologies>}
     * @memberof CreateAppRequest
     */
    technologies?: Array<Technologies>;
    /**
     * 
     * @type {string}
     * @memberof CreateAppRequest
     */
    type?: CreateAppRequestTypeEnum;
}


/**
 * @export
 */
export const CreateAppRequestTypeEnum = {
    Complete: 'complete',
    Flex: 'flex'
} as const;
export type CreateAppRequestTypeEnum = typeof CreateAppRequestTypeEnum[keyof typeof CreateAppRequestTypeEnum];


/**
 * Check if a given object implements the CreateAppRequest interface.
 */
export function instanceOfCreateAppRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateAppRequestFromJSON(json: any): CreateAppRequest {
    return CreateAppRequestFromJSONTyped(json, false);
}

export function CreateAppRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAppRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allowed_callback_urls': !exists(json, 'allowed_callback_urls') ? undefined : json['allowed_callback_urls'],
        'auth_origin': !exists(json, 'auth_origin') ? undefined : json['auth_origin'],
        'hosted': !exists(json, 'hosted') ? undefined : json['hosted'],
        'hosted_subdomain': !exists(json, 'hosted_subdomain') ? undefined : json['hosted_subdomain'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'redirect_url': !exists(json, 'redirect_url') ? undefined : json['redirect_url'],
        'organization_id': !exists(json, 'organization_id') ? undefined : json['organization_id'],
        'technologies': !exists(json, 'technologies') ? undefined : ((json['technologies'] as Array<any>).map(TechnologiesFromJSON)),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function CreateAppRequestToJSON(value?: CreateAppRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allowed_callback_urls': value.allowed_callback_urls,
        'auth_origin': value.auth_origin,
        'hosted': value.hosted,
        'hosted_subdomain': value.hosted_subdomain,
        'name': value.name,
        'redirect_url': value.redirect_url,
        'organization_id': value.organization_id,
        'technologies': value.technologies === undefined ? undefined : ((value.technologies as Array<any>).map(TechnologiesToJSON)),
        'type': value.type,
    };
}

