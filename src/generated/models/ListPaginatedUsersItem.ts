/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserStatus } from './UserStatus';
import {
    UserStatusFromJSON,
    UserStatusFromJSONTyped,
    UserStatusToJSON,
} from './UserStatus';

/**
 * 
 * @export
 * @interface ListPaginatedUsersItem
 */
export interface ListPaginatedUsersItem {
    /**
     * 
     * @type {Date}
     * @memberof ListPaginatedUsersItem
     */
    created_at: Date;
    /**
     * 
     * @type {string}
     * @memberof ListPaginatedUsersItem
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof ListPaginatedUsersItem
     */
    email_verified: boolean;
    /**
     * 
     * @type {string}
     * @memberof ListPaginatedUsersItem
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ListPaginatedUsersItem
     */
    last_login_at: Date;
    /**
     * 
     * @type {number}
     * @memberof ListPaginatedUsersItem
     */
    login_count: number;
    /**
     * 
     * @type {string}
     * @memberof ListPaginatedUsersItem
     */
    phone: string;
    /**
     * 
     * @type {boolean}
     * @memberof ListPaginatedUsersItem
     */
    phone_verified: boolean;
    /**
     * 
     * @type {UserStatus}
     * @memberof ListPaginatedUsersItem
     */
    status: UserStatus;
    /**
     * 
     * @type {Date}
     * @memberof ListPaginatedUsersItem
     */
    updated_at: Date;
    /**
     * 
     * @type {object}
     * @memberof ListPaginatedUsersItem
     */
    user_metadata: object | null;
}

/**
 * Check if a given object implements the ListPaginatedUsersItem interface.
 */
export function instanceOfListPaginatedUsersItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "created_at" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "email_verified" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "last_login_at" in value;
    isInstance = isInstance && "login_count" in value;
    isInstance = isInstance && "phone" in value;
    isInstance = isInstance && "phone_verified" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "updated_at" in value;
    isInstance = isInstance && "user_metadata" in value;

    return isInstance;
}

export function ListPaginatedUsersItemFromJSON(json: any): ListPaginatedUsersItem {
    return ListPaginatedUsersItemFromJSONTyped(json, false);
}

export function ListPaginatedUsersItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListPaginatedUsersItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created_at': (new Date(json['created_at'])),
        'email': json['email'],
        'email_verified': json['email_verified'],
        'id': json['id'],
        'last_login_at': (new Date(json['last_login_at'])),
        'login_count': json['login_count'],
        'phone': json['phone'],
        'phone_verified': json['phone_verified'],
        'status': UserStatusFromJSON(json['status']),
        'updated_at': (new Date(json['updated_at'])),
        'user_metadata': json['user_metadata'],
    };
}

export function ListPaginatedUsersItemToJSON(value?: ListPaginatedUsersItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': (value.created_at.toISOString()),
        'email': value.email,
        'email_verified': value.email_verified,
        'id': value.id,
        'last_login_at': (value.last_login_at.toISOString()),
        'login_count': value.login_count,
        'phone': value.phone,
        'phone_verified': value.phone_verified,
        'status': UserStatusToJSON(value.status),
        'updated_at': (value.updated_at.toISOString()),
        'user_metadata': value.user_metadata,
    };
}

