/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';

/**
 * 
 * @export
 * @interface PaginatedLinks
 */
export interface PaginatedLinks {
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    first: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    last: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    next: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    previous: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    self: Link;
}

/**
 * Check if a given object implements the PaginatedLinks interface.
 */
export function instanceOfPaginatedLinks(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "first" in value;
    isInstance = isInstance && "last" in value;
    isInstance = isInstance && "next" in value;
    isInstance = isInstance && "previous" in value;
    isInstance = isInstance && "self" in value;

    return isInstance;
}

export function PaginatedLinksFromJSON(json: any): PaginatedLinks {
    return PaginatedLinksFromJSONTyped(json, false);
}

export function PaginatedLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedLinks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'first': LinkFromJSON(json['first']),
        'last': LinkFromJSON(json['last']),
        'next': LinkFromJSON(json['next']),
        'previous': LinkFromJSON(json['previous']),
        'self': LinkFromJSON(json['self']),
    };
}

export function PaginatedLinksToJSON(value?: PaginatedLinks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'first': LinkToJSON(value.first),
        'last': LinkToJSON(value.last),
        'next': LinkToJSON(value.next),
        'previous': LinkToJSON(value.previous),
        'self': LinkToJSON(value.self),
    };
}

