/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface PaginatedLinks
 */
export interface PaginatedLinks {
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    first: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    last: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    next: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    previous: Link;
    /**
     * 
     * @type {Link}
     * @memberof PaginatedLinks
     */
    self: Link;
}

/**
 * Check if a given object implements the PaginatedLinks interface.
 */
export function instanceOfPaginatedLinks(value: object): value is PaginatedLinks {
    if (!('first' in value) || value['first'] === undefined) return false;
    if (!('last' in value) || value['last'] === undefined) return false;
    if (!('next' in value) || value['next'] === undefined) return false;
    if (!('previous' in value) || value['previous'] === undefined) return false;
    if (!('self' in value) || value['self'] === undefined) return false;
    return true;
}

export function PaginatedLinksFromJSON(json: any): PaginatedLinks {
    return PaginatedLinksFromJSONTyped(json, false);
}

export function PaginatedLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedLinks {
    if (json == null) {
        return json;
    }
    return {
        
        'first': LinkFromJSON(json['first']),
        'last': LinkFromJSON(json['last']),
        'next': LinkFromJSON(json['next']),
        'previous': LinkFromJSON(json['previous']),
        'self': LinkFromJSON(json['self']),
    };
}

export function PaginatedLinksToJSON(json: any): PaginatedLinks {
    return PaginatedLinksToJSONTyped(json, false);
}

export function PaginatedLinksToJSONTyped(value?: PaginatedLinks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first': LinkToJSON(value['first']),
        'last': LinkToJSON(value['last']),
        'next': LinkToJSON(value['next']),
        'previous': LinkToJSON(value['previous']),
        'self': LinkToJSON(value['self']),
    };
}

