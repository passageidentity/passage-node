/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailProviderResponse
 */
export interface EmailProviderResponse {
    /**
     * 
     * @type {boolean}
     * @memberof EmailProviderResponse
     */
    enabled: boolean;
    /**
     * 
     * @type {string}
     * @memberof EmailProviderResponse
     */
    from_address: string;
    /**
     * 
     * @type {string}
     * @memberof EmailProviderResponse
     */
    type: string;
}

/**
 * Check if a given object implements the EmailProviderResponse interface.
 */
export function instanceOfEmailProviderResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "from_address" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function EmailProviderResponseFromJSON(json: any): EmailProviderResponse {
    return EmailProviderResponseFromJSONTyped(json, false);
}

export function EmailProviderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailProviderResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'from_address': json['from_address'],
        'type': json['type'],
    };
}

export function EmailProviderResponseToJSON(value?: EmailProviderResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'from_address': value.from_address,
        'type': value.type,
    };
}

