/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FontFamily } from './FontFamily';
import {
    FontFamilyFromJSON,
    FontFamilyFromJSONTyped,
    FontFamilyToJSON,
    FontFamilyToJSONTyped,
} from './FontFamily';

/**
 * 
 * @export
 * @interface ElementCustomization
 */
export interface ElementCustomization {
    /**
     * Container background color in hex.
     * Default is `#ffffff` in light mode & `#383838` in dark mode.
     * 
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_container_background_color?: string;
    /**
     * Maximum width of container (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_container_max_width?: number;
    /**
     * Input box background color in hex.
     * Default is `#ffffff` in light mode & `#4b4b4b` in dark mode.
     * 
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_input_box_background_color?: string;
    /**
     * Input box border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_input_box_border_radius?: number;
    /**
     * 
     * @type {FontFamily}
     * @memberof ElementCustomization
     */
    passage_header_font_family?: FontFamily;
    /**
     * 
     * @type {FontFamily}
     * @memberof ElementCustomization
     */
    passage_body_font_family?: FontFamily;
    /**
     * Header text color in hex.
     * Default is `#222222` in light mode & `#f3f3f3` in dark mode.
     * 
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_header_text_color?: string;
    /**
     * Body text color in hex.
     * Default is `#222222` in light mode & `#f3f3f3` in dark mode.
     * 
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_body_text_color?: string;
    /**
     * Primary button background colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_background_color?: string;
    /**
     * Primary button font colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_text_color?: string;
    /**
     * Primary button background on hover (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_hover_color?: string;
    /**
     * Primary button border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_radius?: number;
    /**
     * Primary button border color
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_color?: string;
    /**
     * Primary button border width (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_width?: number;
    /**
     * Secondary button background colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_background_color?: string;
    /**
     * Secondary button font colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_text_color?: string;
    /**
     * Secondary button background on hover (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_hover_color?: string;
    /**
     * Secondary button border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_radius?: number;
    /**
     * Secondary button border color
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_color?: string;
    /**
     * Secondary button border width (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_width?: number;
}



/**
 * Check if a given object implements the ElementCustomization interface.
 */
export function instanceOfElementCustomization(value: object): value is ElementCustomization {
    return true;
}

export function ElementCustomizationFromJSON(json: any): ElementCustomization {
    return ElementCustomizationFromJSONTyped(json, false);
}

export function ElementCustomizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ElementCustomization {
    if (json == null) {
        return json;
    }
    return {
        
        'passage_container_background_color': json['passage_container_background_color'] == null ? undefined : json['passage_container_background_color'],
        'passage_container_max_width': json['passage_container_max_width'] == null ? undefined : json['passage_container_max_width'],
        'passage_input_box_background_color': json['passage_input_box_background_color'] == null ? undefined : json['passage_input_box_background_color'],
        'passage_input_box_border_radius': json['passage_input_box_border_radius'] == null ? undefined : json['passage_input_box_border_radius'],
        'passage_header_font_family': json['passage_header_font_family'] == null ? undefined : FontFamilyFromJSON(json['passage_header_font_family']),
        'passage_body_font_family': json['passage_body_font_family'] == null ? undefined : FontFamilyFromJSON(json['passage_body_font_family']),
        'passage_header_text_color': json['passage_header_text_color'] == null ? undefined : json['passage_header_text_color'],
        'passage_body_text_color': json['passage_body_text_color'] == null ? undefined : json['passage_body_text_color'],
        'passage_primary_button_background_color': json['passage_primary_button_background_color'] == null ? undefined : json['passage_primary_button_background_color'],
        'passage_primary_button_text_color': json['passage_primary_button_text_color'] == null ? undefined : json['passage_primary_button_text_color'],
        'passage_primary_button_hover_color': json['passage_primary_button_hover_color'] == null ? undefined : json['passage_primary_button_hover_color'],
        'passage_primary_button_border_radius': json['passage_primary_button_border_radius'] == null ? undefined : json['passage_primary_button_border_radius'],
        'passage_primary_button_border_color': json['passage_primary_button_border_color'] == null ? undefined : json['passage_primary_button_border_color'],
        'passage_primary_button_border_width': json['passage_primary_button_border_width'] == null ? undefined : json['passage_primary_button_border_width'],
        'passage_secondary_button_background_color': json['passage_secondary_button_background_color'] == null ? undefined : json['passage_secondary_button_background_color'],
        'passage_secondary_button_text_color': json['passage_secondary_button_text_color'] == null ? undefined : json['passage_secondary_button_text_color'],
        'passage_secondary_button_hover_color': json['passage_secondary_button_hover_color'] == null ? undefined : json['passage_secondary_button_hover_color'],
        'passage_secondary_button_border_radius': json['passage_secondary_button_border_radius'] == null ? undefined : json['passage_secondary_button_border_radius'],
        'passage_secondary_button_border_color': json['passage_secondary_button_border_color'] == null ? undefined : json['passage_secondary_button_border_color'],
        'passage_secondary_button_border_width': json['passage_secondary_button_border_width'] == null ? undefined : json['passage_secondary_button_border_width'],
    };
}

export function ElementCustomizationToJSON(json: any): ElementCustomization {
    return ElementCustomizationToJSONTyped(json, false);
}

export function ElementCustomizationToJSONTyped(value?: ElementCustomization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'passage_container_background_color': value['passage_container_background_color'],
        'passage_container_max_width': value['passage_container_max_width'],
        'passage_input_box_background_color': value['passage_input_box_background_color'],
        'passage_input_box_border_radius': value['passage_input_box_border_radius'],
        'passage_header_font_family': FontFamilyToJSON(value['passage_header_font_family']),
        'passage_body_font_family': FontFamilyToJSON(value['passage_body_font_family']),
        'passage_header_text_color': value['passage_header_text_color'],
        'passage_body_text_color': value['passage_body_text_color'],
        'passage_primary_button_background_color': value['passage_primary_button_background_color'],
        'passage_primary_button_text_color': value['passage_primary_button_text_color'],
        'passage_primary_button_hover_color': value['passage_primary_button_hover_color'],
        'passage_primary_button_border_radius': value['passage_primary_button_border_radius'],
        'passage_primary_button_border_color': value['passage_primary_button_border_color'],
        'passage_primary_button_border_width': value['passage_primary_button_border_width'],
        'passage_secondary_button_background_color': value['passage_secondary_button_background_color'],
        'passage_secondary_button_text_color': value['passage_secondary_button_text_color'],
        'passage_secondary_button_hover_color': value['passage_secondary_button_hover_color'],
        'passage_secondary_button_border_radius': value['passage_secondary_button_border_radius'],
        'passage_secondary_button_border_color': value['passage_secondary_button_border_color'],
        'passage_secondary_button_border_width': value['passage_secondary_button_border_width'],
    };
}

