/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TtlDisplayUnit } from './TtlDisplayUnit';
import {
    TtlDisplayUnitFromJSON,
    TtlDisplayUnitFromJSONTyped,
    TtlDisplayUnitToJSON,
} from './TtlDisplayUnit';

/**
 * 
 * @export
 * @interface EmailSmsAuthMethod
 */
export interface EmailSmsAuthMethod {
    /**
     * 
     * @type {boolean}
     * @memberof EmailSmsAuthMethod
     */
    enabled: boolean;
    /**
     * Maximum time (IN SECONDS) for the auth to expire.
     * @type {number}
     * @memberof EmailSmsAuthMethod
     */
    ttl: number;
    /**
     * 
     * @type {TtlDisplayUnit}
     * @memberof EmailSmsAuthMethod
     * @deprecated
     */
    ttl_display_unit: TtlDisplayUnit;
}

/**
 * Check if a given object implements the EmailSmsAuthMethod interface.
 */
export function instanceOfEmailSmsAuthMethod(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "ttl" in value;
    isInstance = isInstance && "ttl_display_unit" in value;

    return isInstance;
}

export function EmailSmsAuthMethodFromJSON(json: any): EmailSmsAuthMethod {
    return EmailSmsAuthMethodFromJSONTyped(json, false);
}

export function EmailSmsAuthMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailSmsAuthMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'ttl': json['ttl'],
        'ttl_display_unit': TtlDisplayUnitFromJSON(json['ttl_display_unit']),
    };
}

export function EmailSmsAuthMethodToJSON(value?: EmailSmsAuthMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'ttl': value.ttl,
        'ttl_display_unit': TtlDisplayUnitToJSON(value.ttl_display_unit),
    };
}

