/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LogEventAllOfEvent
 */
export interface LogEventAllOfEvent {
    /**
     * The message that was logged. The message may contain ANSI escape codes to colorize the message.
     * @type {string}
     * @memberof LogEventAllOfEvent
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof LogEventAllOfEvent
     */
    level: LogEventAllOfEventLevelEnum;
}


/**
 * @export
 */
export const LogEventAllOfEventLevelEnum = {
    Debug: 'debug',
    Info: 'info',
    Warning: 'warning',
    Error: 'error'
} as const;
export type LogEventAllOfEventLevelEnum = typeof LogEventAllOfEventLevelEnum[keyof typeof LogEventAllOfEventLevelEnum];


/**
 * Check if a given object implements the LogEventAllOfEvent interface.
 */
export function instanceOfLogEventAllOfEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "msg" in value;
    isInstance = isInstance && "level" in value;

    return isInstance;
}

export function LogEventAllOfEventFromJSON(json: any): LogEventAllOfEvent {
    return LogEventAllOfEventFromJSONTyped(json, false);
}

export function LogEventAllOfEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogEventAllOfEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'msg': json['msg'],
        'level': json['level'],
    };
}

export function LogEventAllOfEventToJSON(value?: LogEventAllOfEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'msg': value.msg,
        'level': value.level,
    };
}

