/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmailSmsAuthMethod } from './EmailSmsAuthMethod';
import {
    EmailSmsAuthMethodFromJSON,
    EmailSmsAuthMethodFromJSONTyped,
    EmailSmsAuthMethodToJSON,
} from './EmailSmsAuthMethod';
import type { PasskeyAuthMethod } from './PasskeyAuthMethod';
import {
    PasskeyAuthMethodFromJSON,
    PasskeyAuthMethodFromJSONTyped,
    PasskeyAuthMethodToJSON,
} from './PasskeyAuthMethod';

/**
 * Denotes what methods this app is allowed to use for authentication with configurations
 * @export
 * @interface AuthMethods
 */
export interface AuthMethods {
    /**
     * 
     * @type {PasskeyAuthMethod}
     * @memberof AuthMethods
     */
    passkey: PasskeyAuthMethod;
    /**
     * 
     * @type {EmailSmsAuthMethod}
     * @memberof AuthMethods
     */
    otp: EmailSmsAuthMethod;
    /**
     * 
     * @type {EmailSmsAuthMethod}
     * @memberof AuthMethods
     */
    magic_link: EmailSmsAuthMethod;
}

/**
 * Check if a given object implements the AuthMethods interface.
 */
export function instanceOfAuthMethods(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "passkey" in value;
    isInstance = isInstance && "otp" in value;
    isInstance = isInstance && "magic_link" in value;

    return isInstance;
}

export function AuthMethodsFromJSON(json: any): AuthMethods {
    return AuthMethodsFromJSONTyped(json, false);
}

export function AuthMethodsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthMethods {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'passkey': PasskeyAuthMethodFromJSON(json['passkey']),
        'otp': EmailSmsAuthMethodFromJSON(json['otp']),
        'magic_link': EmailSmsAuthMethodFromJSON(json['magic_link']),
    };
}

export function AuthMethodsToJSON(value?: AuthMethods | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'passkey': PasskeyAuthMethodToJSON(value.passkey),
        'otp': EmailSmsAuthMethodToJSON(value.otp),
        'magic_link': EmailSmsAuthMethodToJSON(value.magic_link),
    };
}

