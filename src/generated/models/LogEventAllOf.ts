/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LogEventAllOfEvent } from './LogEventAllOfEvent';
import {
    LogEventAllOfEventFromJSON,
    LogEventAllOfEventFromJSONTyped,
    LogEventAllOfEventToJSON,
} from './LogEventAllOfEvent';

/**
 * 
 * @export
 * @interface LogEventAllOf
 */
export interface LogEventAllOf {
    /**
     * 
     * @type {LogEventAllOfEvent}
     * @memberof LogEventAllOf
     */
    event: LogEventAllOfEvent;
}

/**
 * Check if a given object implements the LogEventAllOf interface.
 */
export function instanceOfLogEventAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "event" in value;

    return isInstance;
}

export function LogEventAllOfFromJSON(json: any): LogEventAllOf {
    return LogEventAllOfFromJSONTyped(json, false);
}

export function LogEventAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogEventAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': LogEventAllOfEventFromJSON(json['event']),
    };
}

export function LogEventAllOfToJSON(value?: LogEventAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': LogEventAllOfEventToJSON(value.event),
    };
}

