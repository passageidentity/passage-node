/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Model400Error
 */
export interface Model400Error {
    /**
     * 
     * @type {string}
     * @memberof Model400Error
     */
    code: Model400ErrorCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof Model400Error
     */
    error: string;
}


/**
 * @export
 */
export const Model400ErrorCodeEnum = {
    InvalidRequest: 'invalid_request',
    CustomProviderRequired: 'custom_provider_required'
} as const;
export type Model400ErrorCodeEnum = typeof Model400ErrorCodeEnum[keyof typeof Model400ErrorCodeEnum];


/**
 * Check if a given object implements the Model400Error interface.
 */
export function instanceOfModel400Error(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function Model400ErrorFromJSON(json: any): Model400Error {
    return Model400ErrorFromJSONTyped(json, false);
}

export function Model400ErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Model400Error {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'error': json['error'],
    };
}

export function Model400ErrorToJSON(value?: Model400Error | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'error': value.error,
    };
}

