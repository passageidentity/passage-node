/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMagicLinkRequest
 */
export interface CreateMagicLinkRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    channel: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    email: string;
    /**
     * language of the email to send (optional)
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    magicLinkPath: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    redirectUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateMagicLinkRequest
     */
    send: boolean;
    /**
     * 
     * @type {number}
     * @memberof CreateMagicLinkRequest
     */
    ttl: number;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    type?: CreateMagicLinkRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateMagicLinkRequest
     */
    userId: string;
}


/**
 * @export
 */
export const CreateMagicLinkRequestTypeEnum = {
    Login: 'login',
    VerifyIdentifier: 'verify_identifier'
} as const;
export type CreateMagicLinkRequestTypeEnum = typeof CreateMagicLinkRequestTypeEnum[keyof typeof CreateMagicLinkRequestTypeEnum];


/**
 * Check if a given object implements the CreateMagicLinkRequest interface.
 */
export function instanceOfCreateMagicLinkRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "channel" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "magicLinkPath" in value;
    isInstance = isInstance && "phone" in value;
    isInstance = isInstance && "redirectUrl" in value;
    isInstance = isInstance && "send" in value;
    isInstance = isInstance && "ttl" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function CreateMagicLinkRequestFromJSON(json: any): CreateMagicLinkRequest {
    return CreateMagicLinkRequestFromJSONTyped(json, false);
}

export function CreateMagicLinkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMagicLinkRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channel': json['channel'],
        'email': json['email'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'magicLinkPath': json['magic_link_path'],
        'phone': json['phone'],
        'redirectUrl': json['redirect_url'],
        'send': json['send'],
        'ttl': json['ttl'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'userId': json['user_id'],
    };
}

export function CreateMagicLinkRequestToJSON(value?: CreateMagicLinkRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel': value.channel,
        'email': value.email,
        'language': value.language,
        'magic_link_path': value.magicLinkPath,
        'phone': value.phone,
        'redirect_url': value.redirectUrl,
        'send': value.send,
        'ttl': value.ttl,
        'type': value.type,
        'user_id': value.userId,
    };
}

