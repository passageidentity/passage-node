/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const ThemeType = {
    Auto: 'auto',
    Light: 'light',
    Dark: 'dark'
} as const;
export type ThemeType = typeof ThemeType[keyof typeof ThemeType];


export function instanceOfThemeType(value: any): boolean {
    for (const key in ThemeType) {
        if (Object.prototype.hasOwnProperty.call(ThemeType, key)) {
            if (ThemeType[key as keyof typeof ThemeType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ThemeTypeFromJSON(json: any): ThemeType {
    return ThemeTypeFromJSONTyped(json, false);
}

export function ThemeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeType {
    return json as ThemeType;
}

export function ThemeTypeToJSON(value?: ThemeType | null): any {
    return value as any;
}

export function ThemeTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): ThemeType {
    return value as ThemeType;
}

