/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UncaughtExceptionEventAllOfEvent } from './UncaughtExceptionEventAllOfEvent';
import {
    UncaughtExceptionEventAllOfEventFromJSON,
    UncaughtExceptionEventAllOfEventFromJSONTyped,
    UncaughtExceptionEventAllOfEventToJSON,
} from './UncaughtExceptionEventAllOfEvent';

/**
 * 
 * @export
 * @interface UncaughtExceptionEventAllOf
 */
export interface UncaughtExceptionEventAllOf {
    /**
     * 
     * @type {UncaughtExceptionEventAllOfEvent}
     * @memberof UncaughtExceptionEventAllOf
     */
    event: UncaughtExceptionEventAllOfEvent;
}

/**
 * Check if a given object implements the UncaughtExceptionEventAllOf interface.
 */
export function instanceOfUncaughtExceptionEventAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "event" in value;

    return isInstance;
}

export function UncaughtExceptionEventAllOfFromJSON(json: any): UncaughtExceptionEventAllOf {
    return UncaughtExceptionEventAllOfFromJSONTyped(json, false);
}

export function UncaughtExceptionEventAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): UncaughtExceptionEventAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': UncaughtExceptionEventAllOfEventFromJSON(json['event']),
    };
}

export function UncaughtExceptionEventAllOfToJSON(value?: UncaughtExceptionEventAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': UncaughtExceptionEventAllOfEventToJSON(value.event),
    };
}

